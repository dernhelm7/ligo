{
  "name": "mligo",
  "scopeName": "source.mligo",
  "fileTypes": [],
  "patterns": [
    { "include": "#string" },
    { "include": "#single-quotes" },
    { "include": "#line_comment" },
    { "include": "#block_comment" },
    { "include": "#macro" },
    { "include": "#list-cons" },
    { "include": "#let-binding" },
    { "include": "#lambda" },
    { "include": "#type-definition" },
    { "include": "#type-annotation" },
    { "include": "#control-keywords" },
    { "include": "#other-keywords" },
    { "include": "#numeric-literals" },
    { "include": "#operators" },
    { "include": "#identifier-constructor" },
    { "include": "#identifier-lower" }
  ],
  "repository": {
    "macro": {
      "name": "string.quoted.double.mligo",
      "begin": "^\\s*((#)\\w+)",
      "end": "$",
      "beginCaptures": { "1": { "name": "meta.preprocessor.mligo" } },
      "endCaptures": {},
      "patterns": [
        { "include": "#string" },
        { "include": "#line_comment" },
        { "include": "#block_comment" }
      ]
    },
    "let-binding": {
      "begin": "\\b(let)\\b",
      "end": "(\\=)",
      "beginCaptures": { "1": { "name": "keyword.other.let-binding.mligo" } },
      "endCaptures": { "1": { "name": "keyword.operator.mligo" } },
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#let-rec" },
        { "include": "#let-function" },
        { "include": "#let-constant" }
      ]
    },
    "let-rec": {
      "name": "storage.modifier.mligo",
      "match": "\\b(rec)\\b",
      "captures": {}
    },
    "let-function": {
      "begin": "\\G\\s*([a-zA-Z_]\\w*)\\b(?=\\s*\\()",
      "end": "(?=\\=)",
      "beginCaptures": { "1": { "name": "keyword.other.let-binding.mligo" } },
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#parameter-list" },
        { "include": "#type-annotation" }
      ]
    },
    "parameter-list": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": { "1": { "name": "keyword.operator.mligo" } },
      "endCaptures": { "1": { "name": "keyword.operator.mligo" } },
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#identifier-parameter" },
        { "include": "#type-annotation" }
      ]
    },
    "parenthesized-definition": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": { "1": { "name": "keyword.operator.mligo" } },
      "endCaptures": { "1": { "name": "keyword.operator.mligo" } },
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#identifier-variable-decl" },
        { "include": "#type-annotation" }
      ]
    },
    "type-annotation": {
      "begin": "(:)\\s*",
      "end": "(?:[;|]|(?=[)=}])|$)",
      "beginCaptures": { "1": { "name": "storage.type.mligo" } },
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#par-type" },
        { "include": "#type-equals" }
      ]
    },
    "par-type": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#par-type" },
        { "include": "#type-equals" }
      ]
    },
    "type-equals": {
      "match": "([^=()|;}/]+)",
      "captures": { "1": { "name": "storage.type.mligo" } }
    },
    "let-constant": {
      "begin": "\\G",
      "end": "(?=\\=)",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#type-annotation" },
        { "include": "#parenthesized-definition" },
        { "include": "#identifier-variable-decl" }
      ]
    },
    "lambda": {
      "begin": "\\b(fun)\\b",
      "end": "(->)",
      "beginCaptures": { "1": { "name": "keyword.other.mligo" } },
      "endCaptures": { "1": { "name": "keyword.operator.mligo" } },
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#parameter-list" }
      ]
    },
    "type-definition": {
      "begin": "\\b(type)\\s+([a-zA-Z_]\\w*)\\b",
      "end": "(?=(?:\\blet\\b|\\btype\\b|^\\s*#\\w+))",
      "beginCaptures": {
        "2": { "name": "storage.var.mligo" },
        "1": { "name": "storage.type.mligo" }
      },
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#struct-type" },
        { "include": "#sum-type" },
        { "include": "#type-alias" }
      ]
    },
    "struct-type": {
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#identifier-variable-decl" },
        { "include": "#type-annotation" }
      ]
    },
    "sum-type": {
      "begin": "\\b([A-Z]\\w*)\\s+(of)?",
      "end": "(\\||(?=\\blet\\b|\\btype\\b|^\\s*#\\w+))",
      "beginCaptures": {
        "2": { "name": "keyword.other.mligo" },
        "1": { "name": "variable.other.enummember.mligo" }
      },
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#par-type" },
        { "include": "#type-equals" }
      ]
    },
    "type-alias": {
      "begin": "\\G\\s*=\\s*(?=[(a-z])",
      "end": "(?=\\blet\\b|\\btype\\b|^\\s*#\\w+)",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [
        { "include": "#line_comment" },
        { "include": "#block_comment" },
        { "include": "#par-type" },
        { "include": "#type-equals" }
      ]
    },
    "string_specialchar": {
      "name": "constant.character.mligo",
      "match": "\\\\.",
      "captures": {}
    },
    "string": {
      "name": "string.quoted.double.mligo",
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [ { "include": "#string_specialchar" } ]
    },
    "single-quotes": {
      "name": "string.quoted.double.mligo",
      "begin": "\\'",
      "end": "\\'",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": []
    },
    "line_comment": {
      "name": "comment.block.mligo",
      "match": "(//.*)",
      "captures": {}
    },
    "block_comment": {
      "name": "comment.block.mligo",
      "begin": "\\(\\*",
      "end": "\\*\\)",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": []
    },
    "list-cons": {
      "name": "keyword.operator.mligo",
      "match": "::",
      "captures": {}
    },
    "control-keywords": {
      "name": "keyword.control.mligo",
      "match": "\\b(match|with|if|then|else|assert|failwith|begin|end)\\b",
      "captures": {}
    },
    "other-keywords": {
      "name": "keyword.other.mligo",
      "match": "\\b(in)\\b",
      "captures": {}
    },
    "numeric-literals": {
      "name": "constant.numeric.mligo",
      "match": "\\b\\d+",
      "captures": {}
    },
    "operators": {
      "name": "keyword.operator.mligo",
      "match": "([-+*/])",
      "captures": {}
    },
    "identifier-lower": {
      "match": "\\b([a-z_]\\w*)\\b",
      "captures": { "1": { "name": "storage.var.mligo" } }
    },
    "identifier-constructor": {
      "match": "\\b([A-Z]\\w*)\\b",
      "captures": { "1": { "name": "variable.other.enummember.mligo" } }
    },
    "identifier-parameter": {
      "match": "\\b([a-zA-Z_]\\w*)\\b",
      "captures": { "1": { "name": "storage.var.mligo" } }
    },
    "identifier-variable-decl": {
      "match": "\\b([a-zA-Z_]\\w*)\\b",
      "captures": { "1": { "name": "storage.var.mligo" } }
    }
  }
}