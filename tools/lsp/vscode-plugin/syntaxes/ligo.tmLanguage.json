{
  "name": "ligo",
  "scopeName": "source.ligo",
  "fileTypes": [],
  "patterns": [
    { "include": "#string" },
    { "include": "#single-quotes" },
    { "include": "#comment" },
    { "include": "#macro" },
    { "include": "#function" },
    { "include": "#binding" },
    { "include": "#type-annotation" },
    { "include": "#type-definition" },
    { "include": "#control-keywords" },
    { "include": "#other-keywords" },
    { "include": "#operators" },
    { "include": "#function-application" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "macro": {
      "name": "string.quoted.double.ligo",
      "begin": "^\\s*((#)\\w+)",
      "end": "$",
      "beginCaptures": { "1": { "name": "meta.preprocessor.ligo" } },
      "endCaptures": {},
      "patterns": [ { "include": "#string" }, { "include": "#comment" } ]
    },
    "function": {
      "begin": "\\b(recursive\\s+)?(function)\\s+([a-zA-Z_]\\w*)\\b",
      "end": "\\b(is)\\b",
      "beginCaptures": {
        "3": { "name": "storage.var.ligo" },
        "2": { "name": "keyword.other.let-binding.ligo" },
        "1": { "name": "storage.modifier.ligo" }
      },
      "endCaptures": { "1": { "name": "keyword.operator.ligo" } },
      "patterns": [
        { "include": "#comment" },
        { "include": "#type-annotation" },
        { "include": "#binding" }
      ]
    },
    "binding": {
      "begin": "\\b(var|const)\\s+([a-zA-Z_]\\w*)\\b",
      "end": "(?=[=),;]|:=)",
      "beginCaptures": {
        "2": { "name": "storage.var.ligo" },
        "1": { "name": "keyword.other.ligo" }
      },
      "endCaptures": {},
      "patterns": [
        { "include": "#comment" },
        { "include": "#type-annotation" }
      ]
    },
    "type-annotation": {
      "begin": "(:(?!=))\\s*",
      "end": "(?:\\||(?=[;)=}\\]]|\\bis\\b|:=)|$)",
      "beginCaptures": { "1": { "name": "keyword.operator.ligo" } },
      "endCaptures": {},
      "patterns": [
        { "include": "#comment" },
        { "include": "#type-expression" }
      ]
    },
    "type-expression": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {},
          "endCaptures": {},
          "patterns": [
            { "include": "#comment" },
            { "include": "#type-expression" }
          ]
        },
        {
          "match": "((?:(?!\\bis\\b|:=)[^=()|;}/\\]])*)",
          "captures": { "1": { "name": "storage.typeligo" } }
        }
      ]
    },
    "type-definition": {
      "begin": "\\b(type)\\s+([a-zA-Z_]\\w*)\\s+(is)\\b",
      "end": "(?=\\b(?:function|type|const|var)\\b|^\\s*#\\w+)",
      "beginCaptures": {
        "3": { "name": "keyword.other.ligo" },
        "2": { "name": "storage.var.ligo" },
        "1": { "name": "storage.typeligo" }
      },
      "endCaptures": {},
      "patterns": [
        { "include": "#comment" },
        { "include": "#struct-type" },
        { "include": "#sum-type" },
        { "include": "#type-alias" }
      ]
    },
    "struct-type": {
      "begin": "\\b(record)\\s*(\\[?)",
      "end": "(\\]|\\bend\\b)",
      "beginCaptures": {
        "2": { "name": "keyword.other.ligo" },
        "1": { "name": "keyword.other.ligo" }
      },
      "endCaptures": { "1": { "name": "keyword.other.ligo" } },
      "patterns": [
        { "include": "#comment" },
        { "include": "#identifiers" },
        { "include": "#type-annotation" }
      ]
    },
    "sum-type": {
      "begin": "\\b([A-Z]\\w*)\\s+(of)?",
      "end": "(\\||(?=\\b(?:function|type|const|var)\\b|^\\s*#\\w+))",
      "beginCaptures": {
        "2": { "name": "keyword.other.ligo" },
        "1": { "name": "variable.other.enummember.ligo" }
      },
      "endCaptures": {},
      "patterns": [
        { "include": "#comment" },
        { "include": "#type-expression" }
      ]
    },
    "type-alias": {
      "begin": "\\G\\s*(?!record\\b)(?=[(a-z])",
      "end": "(?=\\b(?:function|type|const|var)\\b|^\\s*#\\w+)",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [
        { "include": "#comment" },
        { "include": "#type-expression" }
      ]
    },
    "string_specialchar": {
      "name": "constant.character.ligo",
      "match": "\\\\.",
      "captures": {}
    },
    "string": {
      "name": "string.quoted.double.ligo",
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": [ { "include": "#string_specialchar" } ]
    },
    "single-quotes": {
      "name": "string.quoted.double.ligo",
      "begin": "\\'",
      "end": "\\'",
      "beginCaptures": {},
      "endCaptures": {},
      "patterns": []
    },
    "comment": {
      "patterns": [
        { "name": "comment.block.ligo", "match": "(//.*)", "captures": {} },
        {
          "name": "comment.block.ligo",
          "begin": "\\(\\*",
          "end": "\\*\\)",
          "beginCaptures": {},
          "endCaptures": {},
          "patterns": []
        }
      ]
    },
    "control-keywords": {
      "name": "keyword.control.ligo",
      "match":
        "\\b(case|of|if|then|else|for|in|step|to|skip|assert|failwith|begin|end|contains)\\b",
      "captures": {}
    },
    "other-keywords": {
      "name": "keyword.other.ligo",
      "match": "\\b(block|with|record|set|map|list)\\b",
      "captures": {}
    },
    "operators": {
      "name": "keyword.operator.ligo",
      "match": "([-+*/=]|->|:=)",
      "captures": {}
    },
    "function-application": {
      "match": "\\b([a-zA-Z_]\\w*)\\s+\\(",
      "captures": { "1": { "name": "storage.var.ligo" } }
    },
    "identifiers": {
      "match": "\\b([a-zA-Z_]\\w*)\\b",
      "captures": { "1": { "name": "storage.var.ligo" } }
    }
  }
}