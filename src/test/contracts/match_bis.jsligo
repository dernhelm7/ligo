type storage = int;

type parameter =
| ["Increment", int]
| ["Decrement", int];

let add = (a: int, b: int) => a + b;
let sub = (a: int, b: int) => a - b;

let main = ([action, store] : [parameter, storage]) => {
  let store2 = match(action, {
    Increment: (value: int) => add (store, value),
    Decrement: (value: int) => sub (store, value),
  });
  return [([] as list <operation>), store2];
};

