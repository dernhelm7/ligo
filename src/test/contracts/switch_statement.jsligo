// TODO: handle un-used variable n while compiling switch
let single_default_return = (_n : int) : string => {
    let output = "Hello";
    switch (n) {
      default: 
         output = output + "!!";
         return output; 
    };
    output = output + "World"; 
    return output;
};

// TODO: handle un-used variable n while compiling switch
let single_default_no_statements = (_n : int) : string => {
    let output = "Hello";
    switch (n) {
      default: 
    }
    return output;
};

// TODO: handle un-used variable n while compiling switch
let single_default_break_1 = (_n : int) : string => {
    let output = "Hello";
    switch (n) {
      default: output = output + "World"; 
    }
    return output;
};

// TODO: handle un-used variable n while compiling switch
let single_default_break_2 = (_n : int) : string => {
    let output = "Hello ";
    switch (n) {
      default: 
        output = output + "World"; 
        break;
    }
    return output;
};

// TODO: handle un-used variable n while compiling switch
let single_case_no_statements = (_n : int) : string => {
    let output = "Hello";
    switch (n) {
      case 1: 
    }
    return output;
};

let single_case_return = (n : int) : string => {
    let output = "Hello";
    switch (n) {
      case 1: return "World";
    };
    return output;
}

let single_case_fallthrough = (n : int) : string => {
    let output = "Hello ";
    switch (n) {
      case 1: 
        output = output + "World";
    }
    return output;
}

let single_case_break = (n : int) : string => {
    let output = "Hello ";
    switch (n) {
      case 1: 
        output = output + "World";
        break;
    }
    return output;
}