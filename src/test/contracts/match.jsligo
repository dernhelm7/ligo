type storage = int;

type parameter =
| ["Add", int]
| ["Sub", int];

type return_ = [list <operation>, storage];

let main = ([action, store]: [parameter, storage]) => {
  let store2 = match (action, {
    Add: (n: nat) => n,
    Sub: (n: nat) => -n
  });  
  return [(List() as list <operation>), store2];
}
