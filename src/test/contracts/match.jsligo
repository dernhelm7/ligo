type storage = int;

type Add = {
  kind: 'Add',
  value: int
}
type Sub = {
  kind: 'Sub',
  value: int
}

type parameter =
| Add
| Sub;

type return = [list <operation>, storage];

let main = ([action, store]: [parameter, storage]) => {
  let store2 = match (action) ({
    Add: (n: nat) => n,
    Sub: (n: nat) => -n
  });  
  return [([] as list <operation>), store2];
}
