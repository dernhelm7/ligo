/* IF YOU CHANGE THIS, CHANGE THE EXAMPLE ON THE FRONT PAGE OF THE WEBSITE */

type storage = int;

/* variant defining pseudo multi-entrypoint actions */

type Increment = {
  kind: 'increment',
  value: int
}

type Decrement = {
  kind: 'decrement',
  value: int
}

type parameter =
| Increment
| Decrement;

let add = ([a,b]: [int, int]): int => a + b;
let sub = ([a,b]: [int, int]): int => a - b;

/* real entrypoint that re-routes the flow based on the parameter provided */

let main = ([p,storage]: [parameter, storage]) => {
  let storage2 = match(p, {
    increment: (n: int) => add ([storage, n]),
    decrement: (n: int) => sub ([storage, n]) 
  });
  return [[] as list <operation>, storage2];
};

/* IF YOU CHANGE THIS, CHANGE THE EXAMPLE ON THE FRONT PAGE OF THE WEBSITE */
